<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhuicloud.generator.mapper.GenDsInfoMapper">
  <resultMap id="BaseResultMap" type="com.xhuicloud.common.datasource.entity.GenDsInfo">
    <!--@mbg.generated-->
    <!--@Table gen_ds_info-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="is_del" jdbcType="BOOLEAN" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="host" jdbcType="VARCHAR" property="host" />
    <result column="port" jdbcType="VARCHAR" property="port" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, is_del, create_time, update_time, `name`, `type`, username, `password`,
    `host`, port
  </sql>

  <select id="queryTableForMysql" resultType="com.xhuicloud.generator.entity.TableInfo">
    select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables
    where table_schema = (select database())
    and table_name = #{tableName}
  </select>

  <select id="queryPageTableForMysql" resultType="com.xhuicloud.generator.entity.TableInfo">
    select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables
    where table_schema = (select database())
  </select>

  <select id="queryColumnsForMysql" resultType="com.xhuicloud.generator.entity.TableColumnsInfo">
    select column_name columnName, data_type dataType, column_comment columnComment, column_key columnKey, extra ,is_nullable as isNullable,column_type as columnType from information_schema.columns
    where table_name = #{tableName} and table_schema = (select database()) order by ordinal_position
  </select>
</mapper>
